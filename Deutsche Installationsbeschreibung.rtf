{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11640\viewh10780\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\b\fs28 \cf0 Server
\b0\fs24 \
Zuerst muss NodeJS installiert werden\
(Anleitung: https://github.com/nodejs/node-v0.x-archive/wiki/Installing-Node.js-via-package-manager)\
\
Nun wechseln wir in das Verzeichnis des Servers:\

\i cd pfad-zum-server
\i0 \
\
Mit dem Befehl: 
\i node server.js
\i0  oder 
\i nodejs server.js
\i0  wird nun der Server gestartet.\
\

\b\fs28 Client
\b0\fs24 \
F\'fcr den Client wird ein Webserver (wie Apache oder nginx) empfohlen. Auf diese Weise kann durch http://localhost/pfad-zum-client/ die PHP-Datei aufgerufen werden, die automatisch alle ben\'f6tigten Dateien in der richtigen Reihenfolge und einer Version (zum Verhindern von Caching) l\'e4dt.\
Falls kein Webserver zur Hand liegt kann die "static-index.html" Datei aufgerufen werden.\
Die Servereinstellungen k\'f6nnen in der client/js/settings.js Datei eingestellt werden. Wenn man als Servernamen "tchost.de" und als Port "24690" eintr\'e4gt, so wird eine Verbindung zum Server von mir hergestellt.\
\

\b\fs28 Tests
\b0\fs24 \
Die client/testRunner.html erm\'f6glicht das Ausf\'fchren von Tests. Die Testdateien befinden sich in client/tests/*.html, eine Verlinkung zu diesen Dateien wurde in der client/tests/-settings.js Datei eingestellt.\
\

\b\fs28 Dokumentation
\b0\fs24 \
Um die Dokumentation zu \'f6ffnen startet man die jsdoc/index.html Datei. Hier kann man zu den ganzen Dokumentationen navigieren. Um nach der Bearbeitung eines Prototypen die Dokumentation neu zu generieren kann die doc.sh Datei ausgef\'fchrt werden (ben\'f6tigt chmod +x).\
Die conf.json Datei ist die Konfigurationsdatei f\'fcr JSDoc und wird zurzeit ausschlie\'dflich zum Ausschlie\'dfen von Ordnern aus der Dokumentation benutzt.}